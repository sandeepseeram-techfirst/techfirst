Yelb has containers for Database (Postgres), Caching service (Redis), Web server (NGINX), and App server (Ruby).

deploy an app for testing.

developer:src > kubectl create -f https://gist.githubusercontent.com/oborys/444d965f17be5a40ab3752a67d07da7f/raw/737c0dc4d4ec6f5057a95ca77936ee829e15f8e7/gistfile1.txt
service/redis-server created
service/yelb-db created
service/yelb-appserver created
service/yelb-ui created
deployment.apps/yelb-ui created
deployment.apps/redis-server created
deployment.apps/yelb-db created
deployment.apps/yelb-appserver created
developer:src > 

Create an Istio Ingress Gateway:

developer:src > kubectl create -f https://gist.githubusercontent.com/oborys/e39025f07e8b8122b654999e13a2df93/raw/c53183ab74cb6ec242be05ab804754083fd5a8be/gistfile1.txt
gateway.networking.istio.io/yelb-gateway created
virtualservice.networking.istio.io/yelb created

Check pods 

developer:src > kubectl get pods
NAME                             READY   STATUS    RESTARTS   AGE
redis-server-74556bbcb7-lwfl7    2/2     Running   0          5m9s
yelb-appserver-d584bb889-t45xj   2/2     Running   0          5m8s
yelb-db-694586cd78-t8674         2/2     Running   0          5m8s
yelb-ui-767cdbdb67-p9pw6         2/2     Running   0          5m9s
developer:src > 

developer:src > kubectl wait --for=condition=ready pod -l app=yelb-ui --timeout=240s
pod/yelb-ui-767cdbdb67-p9pw6 condition met


Set the INGRESS_HOST and INGRESS_PORT variables for accessing the gateway (GATEWAY_URL):

export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')
export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT
echo "${GATEWAY_URL}"


developer:src > export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
developer:src > export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
developer:src > export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')
developer:src > export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT
developer:src > echo "${GATEWAY_URL}"
172.18.0.2:32023
developer:src > 


developer:src > DEVENV_APP_8081_URL_PROXY=$GATEWAY_URL reload-devenv-proxy.sh
developer:src > echo ${DEVENV_APP_8081_URL}
https://app-8081-6979961426065792738.devenv.eu-north-1.devnetcloud.com
developer:src > 

ERROR - 
upstream connect error or disconnect/reset before headers. reset reason: connection failure