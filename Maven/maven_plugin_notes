Maven Plugins
Maven is, at its heart, a plugin execution framework; all work is done by plugins. This means that when you need to perform some task like compiling Java source code or packaging it up into an executable JAR, you will need to reach for a plugin. The good news is that Maven ships with a lot of the plugins you will need for every day use. Here is a list of common Maven plugins:

clean: clean up after the build
compiler: compiles Java sources
jar: build a JAR from the current project
war: build a WAR from the current project
install: install the built artifact into the local repository
surefire: run the JUnit unit tests in an isolated classloader
javadoc: generate Javadoc for the project



the compiler plugin is made up of two goals:

compiler:compile is bound to the compile phase and is used to compile the main source files
compiler:testCompile is bound to the test-compile phase and is used to compile the test source files